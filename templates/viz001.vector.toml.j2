[sources.thesink]
  # syslog from thesink via vector
  # General
  type = "vector" # Assuming the source is the Vector sink on 'thesink'
  # address = "143.110.158.73:9000" # IP address of 'thesink'
  address = "0.0.0.0:9000" # IP address of 'thesink' (dev)
  shutdown_timeout_secs = 30 # optional, default: 30s

  # TLS
  # Make sure to mount volume in docker-compose '/etc/ca-certificates/certificate_authority.crt:/etc/ssl/certs/certificate_authority.crt'
  #tls.ca_file = "/etc/ssl/certs/certificate_authority.crt" # Local to the vector container.
  #tls.crt_file = "/etc/ssl/certs/host_certificate.crt" # as above
  #tls.enabled = true
  #tls.key_file = "/etc/ssl/certs/host_certificate.key" # as above
  #tls.key_pass = "{{ hpviz_vector_hostkey_secret }}" # Configure GITHUB_SECRETS "KEY_PASS_ENV_VAR" !! - This needs to be configured on ansible
  #tls.verify_certificate = true

[sources.syslog_viz001]
  # syslog from viz001 (localhost)
  type = "syslog" # required
  address = "0.0.0.0:514"
  mode = "udp" # required, options 'udp', 'tcp', 'unix'
  # Context
  host_key = "viz001.ecu-sri.net"

[sinks.kafka]
  # General
  type = "kafka" # required
  inputs = ["syslog_viz001", "thesink"] # Format: "[sources.foo]", "[sources.bar]" == ["foo", "bar"]
  bootstrap_servers = "172.17.0.3:29092" # IP required not hostname
  compression = "none" # optional, default
  healthcheck = true # optional, default
  key_field = "user_id" # required
  message_timeout_ms = 300000 # optional, default
  socket_timeout_ms = 60000 # optional, default
  topic = "logging.syslog.vector" # required

  {# Advanced
  #librdkafka_options."client.id" = "{LIBRD_KAFKA_ENV_VAR}" # example: Configure GITHUB_SECRETS "LIBRD_KAFKA_ENV_VAR" !!
  #librdkafka_options."fetch.error.backoff.ms" = "1000"  # example
  #librdkafka_options."socket.send.buffer.bytes" = "100" # example#}

  # Buffer
  buffer.max_events = 500 # optional, default, events, relevant when type = "memory"
  buffer.max_size = 104900000 # required, bytes, required when type = "disk"
  buffer.type = "memory" # optional, default
  buffer.when_full = "block" # optional, default

  # Encoding
  encoding.codec = "json" # optional, default
  #encoding.except_fields = ["timestamp", "message", "host"] # optional, no default
  #encoding.only_fields = ["timestamp", "message", "host"] # optional, no default
  encoding.timestamp_format = "rfc3339" # optional, default

  # SASL
  # sasl.enabled = true # optional, no default
  # sasl.mechanism = "SCRAM-SHA-256" # optional, no default
  # sasl.password = "password" # optional, no default
  # sasl.username = "username" # optional, no default

  # TLS
  # Make sure to mount volume in docker-compose '/etc/ca-certificates/certificate_authority.crt:/etc/ca-certificates/certificate_authority.crt'
  #tls.ca_file = "/etc/ca-certificates/certificate_authority.crt" # Local to the vector container.
  #tls.crt_file = "/etc/ca-certificates/host_certificate.crt" # as above
  #tls.enabled = true
  #tls.key_file = "/etc/ca-certificates/host_certificate.key" # as above
  #tls.key_pass = "{KEY_PASS_ENV_VAR}" # Configure GITHUB_SECRETS "KEY_PASS_ENV_VAR" !! - This needs to be configured on ansible
  #tls.verify_certificate = true
