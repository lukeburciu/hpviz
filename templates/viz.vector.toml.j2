[sources.thesink]
  # syslog from thesink via vector
  # General
  type = "vector" # Assuming the source is the Vector sink on 'thesink'
  ## address = "143.110.158.73:9000" # IP address of 'thesink' (to be removed)
  address = "0.0.0.0:{{ hpviz_vector_port }}" # IP address of 'thesink'
  shutdown_timeout_secs = 30 # optional, default: 30s

  # TLS
  # Make sure to mount volume in docker-compose '/etc/ca-certificates/certificate_authority.crt:/etc/ssl/certs/certificate_authority.crt'
  tls.ca_file = "{{ local_ca_file }}" # Local to the vector container.
  tls.crt_file = "/etc/ssl/certs/{{ hpviz_vector_hostkey }}.crt" # as above
  tls.enabled = true
  tls.key_file = "/etc/ssl/private/{{ hpviz_vector_hostkey }}.key" # as above
  #tls.key_pass = " hpviz_vector_hostkey_secret " # Placeholder: TO DO: Configure GITHUB SECRETS and enable 'hpviz_vector_hostkey_secret'
  tls.verify_certificate = false

[sources.syslog_viz001]
  # syslog from viz001 (localhost)
  type = "syslog" # required
  address = "0.0.0.0:{{ hpviz_syslog_ingest_port }}"
  mode = "udp" # required, options 'udp', 'tcp', 'unix'
  # Context
  host_key = "{{ hpviz_vector_hostkey }}"  # use this format as vector sees "." as a seperate field

{#[transforms.parse_syslog]
  type = "logfmt_parser"
  inputs = ["syslog_viz001", "thesink"]
  drop_field = false
  field = "message"
  # Types
  types.status = "int" # example
  types.duration = "float" # example
  types.success = "bool" # example
  types.timestamp = "timestamp|%F" # example
  #types.timestamp = "timestamp|%a %b %e %T %Y" # example
  types.parent.child = "int" # example
  types.appname = "string"
  types.facility = "string"#}

[transforms.tag]
  type="add_fields"
  inputs = ["syslog_viz001", "thesink"]
  overwrite=true

  #tags
  fields.tags = ["syslog", "json"]

[sinks.kafka]
  # General
  type = "kafka" # required
  #inputs = ["syslog_viz001", "thesink"] # Format: "[sources.foo]", "[sources.bar]" == ["foo", "bar"]
  inputs = ["tag"] # Format: "[sources.foo]", "[sources.bar]" == ["foo", "bar"]
  bootstrap_servers = "{{ hpviz_broker_bootstrap_server1 }}:{{ hpviz_broker_bootstrap_port1 }}" # IP required not hostname
  compression = "none" # optional, default
  healthcheck = true # optional, default
  key_field = "user_id" # required
  message_timeout_ms = 300000 # optional, default
  socket_timeout_ms = 60000 # optional, default
  topic = "logging.syslog.raw" # required

  # Buffer
  buffer.max_events = 500 # optional, default, events, relevant when type = "memory"
  buffer.max_size = 104900000 # required, bytes, required when type = "disk"
  buffer.type = "memory" # optional, default
  buffer.when_full = "block" # optional, default

  # Encoding
  encoding.codec = "json" # optional, default
  encoding.timestamp_format = "rfc3339" # optional, default
